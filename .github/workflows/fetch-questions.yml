name: Fetch All Oireachtas Questions (52 weeks)

on:
  workflow_dispatch:

jobs:
  fetch-sequential:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install jq for validation
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch and store questions weekly
        run: |
          mkdir -p data/questions
          touch fetch-log.txt
          echo "üïì Fetch started at $(date -u)" > fetch-log.txt

          for week in $(seq 0 51); do
            START=$(date -d "2025-01-01 +${week} weeks" +%F)
            END=$(date -d "$START +6 days" +%F)
            FILE="data/questions/week_$(printf "%02d" $week).json"
            URL="https://api.oireachtas.ie/v1/questions?date_start=$START&date_end=$END&limit=5000&qtype=oral,written"

            echo "üìÖ Week $week: $START to $END" | tee -a fetch-log.txt

            attempts=0
            success=false

            while [ $attempts -lt 3 ]; do
              curl -s -w "%{http_code}" -o "$FILE" "$URL" > curl_status.txt
              STATUS=$(tail -n1 curl_status.txt)

              if [ "$STATUS" -eq 200 ]; then
                if jq -e '.message' "$FILE" >/dev/null 2>&1; then
                  echo "‚ö†Ô∏è API error message in $FILE ‚Äî retrying..." | tee -a fetch-log.txt
                elif jq -e '.results' "$FILE" >/dev/null 2>&1; then
                  COUNT=$(jq '.results | length' "$FILE")
                  if [ "$COUNT" -eq 0 ]; then
                    echo "‚ö†Ô∏è Week $week has no results" | tee -a fetch-log.txt
                  else
                    echo "‚úÖ Week $week OK ‚Äî $COUNT results" | tee -a fetch-log.txt
                  fi
                  success=true
                  break
                else
                  echo "‚ùå Malformed JSON ‚Äî retrying..." | tee -a fetch-log.txt
                fi
              else
                echo "‚ùå HTTP $STATUS ‚Äî retrying..." | tee -a fetch-log.txt
              fi

              attempts=$((attempts + 1))
              echo "‚è≥ Waiting 30 seconds (attempt $((attempts + 1)))"
              sleep 30
            done

            if [ "$success" = false ]; then
              echo "üõë Failed to fetch week $week after 3 attempts" | tee -a fetch-log.txt
              rm -f "$FILE"
            fi

            echo "üïí Sleeping 60s before next..." | tee -a fetch-log.txt
            sleep 60
          done

          echo "‚úÖ Fetch completed at $(date -u)" >> fetch-log.txt

      - name: Commit weekly files to repo
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add data/questions/*.json fetch-log.txt || echo "No files to add"
          echo "Files staged for commit:"
          git diff --cached --name-only

          if git diff --cached --quiet; then
            echo "‚ö†Ô∏è Nothing to commit ‚Äî skipping push"
          else
            git commit -m "Updated weekly PQ files and fetch log"
            git push origin HEAD
